{"ast":null,"code":"var _jsxFileName = \"C:\\\\home1\\\\src\\\\com\\\\Ham.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../style/Ham.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ham = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ham-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ham-button\",\n      onClick: toggleMenu,\n      children: isOpen ? 'X' : '☰'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-content\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            onClick: toggleMenu,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Ham, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Ham;\nexport default Ham;\nvar _c;\n$RefreshReg$(_c, \"Ham\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Ham","_s","isOpen","setIsOpen","toggleMenu","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/home1/src/com/Ham.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style/Ham.scss';\r\n\r\nconst Ham = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ham-menu\">\r\n      <div className=\"ham-button\" onClick={toggleMenu}>\r\n        {isOpen ? 'X' : '☰'}\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"menu-content\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/login\" onClick={toggleMenu}>로그인</Link>\r\n            </li>\r\n            {/* 다른 메뉴 항목들도 여기 추가 */}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ham;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBP,OAAA;MAAKM,SAAS,EAAC,YAAY;MAACE,OAAO,EAAEH,UAAW;MAAAE,QAAA,EAC7CJ,MAAM,GAAG,GAAG,GAAG;IAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EACLT,MAAM,iBACLH,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BP,OAAA;QAAAO,QAAA,eACEP,OAAA;UAAAO,QAAA,eACEP,OAAA,CAACF,IAAI;YAACe,EAAE,EAAC,QAAQ;YAACL,OAAO,EAAEH,UAAW;YAAAE,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CAxBID,GAAG;AAAAa,EAAA,GAAHb,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}